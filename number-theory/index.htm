<!DOCTYPE html>
<html>
	<head>
		<title>Algorithm works</title>
		<script src="//cdn.bootcss.com/prefixfree/1.0.7/prefixfree.min.js"></script>
		<script src="../js/acesrc/ace.js"></script>
      <script data-main="../js/codehlt" src="../scripts/require.js"></script>
		<link href="../favicon.png" rel="icon" type="image/png" />
		<link href="../css/page.css" rel="stylesheet"/>
		<script type="text/x-mathjax-config">
			MathJax.Hub.Config({
				extensions: ["tex2jax.js"],
				jax: ["input/TeX", "output/SVG"],
				tex2jax: {
					inlineMath: [ ['$','$'], ["\\(","\\)"] ],
					displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
					processEscapes: true
				},
				"HTML-CSS": { availableFonts: ["STIX","TeX"] }
			});
		</script>
		<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_SVG"></script>
	</head>
	<body>
		<div class="page">
			<div class="float downside"><a href="../">返回首页</a></div>
			<h1>数论算法</h1>
			<p>数论主要研究的是整数的性质,数论算法也是一块非常有意思的内容.数论的算法一般并不深奥,但是很精妙(当然,有些算法的背后有着很深刻的问题,比如Miller-Rabin测试背后的Generalized Riemann Hypothesis).</p>
			<p>数论的相当多算法都已经被研究了很长时间了,比如质因数分解(而它到现在为止都没有给出对于大数据有效的算法.)数论的问题,是非常深刻的,而且影响着数学的方方面面.</p>
			<p>有一点要特别注意,那就是这里所说的数论算法,事实上包括了一些更大的领域的内容,如组合学之类的.</p>
			<h2>数论历史<a qhref href="./history">[主页面]</a></h2>
			<blockquote alert>警告:此页面尚未添加,本子标题的存在仅为了维持文章结构.</blockquote>
			<h2>最大公约数<a qhref href="./greatest_common_divisor">[主页面]</a></h2>
			最大公约数是数论中一个非常简单的问题.在古希腊,欧几里得时代就给出了一个有效算法(那个时候当然还没有复杂度理论),即辗转相除法,这个算法时间复杂度$\mathtt{O}(n^2\log{n})$.
			<h2>素性测试<a qhref href="./primality_test">[主页面]</a></h2>
			素性测试是一个非常重要的问题,不管是在应用上或者是在理论上.素性测试中的一个重要的里程碑就是AKS算法,一个被证明是多项式时间的确定性算法.虽然实际使用中有一些更好的方法(比如确定性Miller-Rabin(GRH),亚指数的APR-CL).这些算法需要讲很长一段时间.显然这不是问题.
			<h2>质因数分解<a qhref href="./integer_factorization">[主页面]</a></h2>
			<p>质因数分解的困难性可以从一些地方看出来,如现在还没有多项式的质因数分解算法.已知的最好的算法是广数域筛法(General Field Sieve).随着对于质因数分解的算法的研究的不断深入,由于一种广泛运用着的不对称加密方式:RSA加密,这个以质因数分解的困难性作为它安全的保障的算法,安全性已经岌岌可危了.人类的进步总是要伴随着某些损失,不是么?</p>
		</div>
	</body>
</html>
